{"version":3,"sources":["webpack://sleact-js-front/./components/ShareBoardWriteForm/index.jsx","webpack://sleact-js-front/./pages/ShareBoard/Write/index.jsx"],"names":["ShareBoardWriteForm","props","title","onChangeTitle","useInput","bookTitle","onChangeBookTitle","content","onChangeContent","tag","onChangeTag","createSuccess","setCreateSuccess","useState","userData","useSelector","state","auth","user","userId","user_id","onSubmit","useCallback","e","preventDefault","length","trim","alert","params","book_title","sharing_board_tag","apiController","url","method","data","then","res","Write","height","withRouter"],"mappings":"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","file":"pages_ShareBoard_Write_index_jsx.js","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { Container, Form, WriteHeader, Input, TextArea, Button, FormDiv } from '@components/ShareBoardWriteForm/styles';\nimport { useSelector } from 'react-redux';\nimport useInput from '@hooks/useInput';\nimport { Redirect } from 'react-router';\nimport apiController from '@apis/apiController';\n\nconst ShareBoardWriteForm = (props) => {\n  const [title, onChangeTitle] = useInput('');\n  const [bookTitle, onChangeBookTitle] = useInput('');\n  const [content, onChangeContent] = useInput('');\n  const [tag, onChangeTag] = useInput('');\n\n  const [createSuccess, setCreateSuccess] = useState(false);\n\n  const userData = useSelector((state) => state.auth.user);\n  const userId = userData.user_id;\n\n  const onSubmit = useCallback(\n    (e) => {\n      e.preventDefault();\n      // console.log(title, bookTitle, content, tag, userId);\n\n      if (!title.length || !title.trim().length) {\n        alert('글 제목을 작성해주세요.');\n      } else if (!bookTitle.length || !bookTitle.trim().length) {\n        alert('책 제목을 작성해주세요.');\n      } else if (!content.length || !content.trim().length) {\n        alert('내용을 작성해주세요.');\n      } else {\n        let params = {\n          book_title: bookTitle,\n          content,\n          sharing_board_tag: tag,\n          title,\n          user_id: userId,\n        };\n\n        apiController({\n          url: '/users/sharings',\n          method: 'post',\n          data: params,\n        }).then((res) => {\n          alert('성공적으로 작성되었습니다.');\n          setCreateSuccess(true);\n        });\n      }\n    },\n    [title, bookTitle, content, tag, userId],\n  );\n\n  if (createSuccess) {\n    return <Redirect to=\"/shareboard\" />;\n  }\n\n  return (\n    <div>\n      <Container>\n        <WriteHeader>게시글 작성</WriteHeader>\n        <Form onSubmit={onSubmit}>\n          <FormDiv>\n            <div id=\"title\">\n              글 제목\n              <Input\n                id=\"title\"\n                name=\"title\"\n                placeholder=\"제목을 입력해주세요.\"\n                value={title}\n                onChange={onChangeTitle}\n              />\n            </div>\n            <div id=\"book_title\">\n              책 제목\n              <Input\n                id=\"book_title\"\n                name=\"book_title\"\n                placeholder=\"제목을 입력해주세요.\"\n                value={bookTitle}\n                onChange={onChangeBookTitle}\n              />\n            </div>\n            <div id=\"content\">\n              본문\n              <TextArea\n                id=\"content\"\n                name=\"content\"\n                placeholder=\"내용을 입력해주세요.\"\n                value={content}\n                onChange={onChangeContent}\n              />\n            </div>\n            <div id=\"tag\">\n              태그\n              <Input id=\"tag\" name=\"tag\" placeholder=\"#태그\" value={tag} onChange={onChangeTag} />\n            </div>\n            <Button type=\"submit\">작성하기</Button>\n          </FormDiv>\n        </Form>\n      </Container>\n    </div>\n  );\n};\n\nexport default ShareBoardWriteForm;\n","import React from 'react';\nimport Header from '@layouts/Header';\nimport Footer from '@layouts/Footer';\nimport ShareBoardWriteForm from '@components/ShareBoardWriteForm';\nimport { Container, BRContainer } from '@pages/MyBookRecord/BRWrite/styles';\nimport { withRouter } from 'react-router';\n\nconst Write = () => {\n  return (\n    <div style={{ height: '100%' }}>\n      <BRContainer>\n        <Header />\n        <Container>\n          <ShareBoardWriteForm />\n        </Container>\n      </BRContainer>\n      <Footer />\n    </div>\n  );\n};\n\nexport default withRouter(Write);\n"],"sourceRoot":""}