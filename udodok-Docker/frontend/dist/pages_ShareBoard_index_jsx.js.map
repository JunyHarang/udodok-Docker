{"version":3,"sources":["webpack://sleact-js-front/./components/CardsPopular/index.jsx","webpack://sleact-js-front/./pages/ShareBoard/index.jsx"],"names":["Cards","props","title","bookTitle","length","slice","boardId","textDecoration","color","hover","borderRadius","borderTopLeftRadius","borderTopRightRadius","maxHeight","textAlign","writerNickName","createdBoard","bookTag","ShareBoard","currentPage","setCurrentPage","useState","totalElements","setTotalElements","sharedBoards","setSharedBoards","popularSharedBoards","setPopularSharedBoards","useEffect","axios","withCredentials","then","res","data","catch","err","console","dir","handlePageChange","page","params","pagination","total_pages","total_elements","current_page","current_elements","window","scrollTo","onClickEdit","useCallback","history","push","height","map","board","index","created_at","id","like_cnt","book_title","writer_info","nick_name","tag_content","marginBottom","marginLeft","withRouter"],"mappings":"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","file":"pages_ShareBoard_index_jsx.js","sourcesContent":["import React from 'react';\nimport { Container, Title, Content, BookTitle, DateTime, NickName, Tag } from '@components/Cards/styles';\nimport { Link, Redirect } from 'react-router-dom';\nimport { Col } from 'antd';\nimport 'antd/dist/antd.css';\n\nconst Cards = (props) => {\n  // console.log(props);\n\n  let title = props.title,\n    bookTitle = props.bookTitle;\n\n  if (title.length > 13) {\n    title = title.slice(0, 10) + '...';\n  }\n\n  if (bookTitle.length > 13) {\n    bookTitle = bookTitle.slice(0, 10) + '...';\n  }\n\n  return (\n    <Col span={6}>\n      <Container>\n        <Link\n          to={`/shareboard/detail/${props.boardId}`}\n          style={{ textDecoration: 'none', color: '#000', hover: 'none' }}\n        >\n          <div class=\"card\" style={{ borderRadius: '5px' }}>\n            {/* <div class=\"card-header\">My Card</div> */}\n            <img\n              style={{ borderTopLeftRadius: '5px', borderTopRightRadius: '5px', maxHeight: '250px' }}\n              src=\"images/placeholder.png\"\n              alt=\"\"\n            />\n            <div class=\"card-body\" style={{ textAlign: 'right' }}>\n              <Title>{title}</Title>\n              <Content>\n                <BookTitle>{bookTitle}</BookTitle>\n                <NickName>{props.writerNickName}</NickName>\n                <DateTime>{props.createdBoard}</DateTime>\n                <Tag>{props.bookTag}</Tag>\n              </Content>\n              {/* <Link to=\"/shareboard/detail\">\n              <Detail>자세히</Detail>\n            </Link> */}\n            </div>\n          </div>\n        </Link>\n      </Container>\n    </Col>\n  );\n};\n\nexport default Cards;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport Header from '@layouts/Header';\nimport Footer from '@layouts/Footer';\nimport { Container, Title, Content, PopularCards, SharedCards, Button } from '@pages/ShareBoard/styles';\nimport Cards from '@components/Cards';\nimport CardsPopular from '@components/CardsPopular';\nimport { Row } from 'antd';\nimport axios from 'axios';\nimport Paging from '@components/Paging';\nimport { withRouter } from 'react-router';\n\nconst ShareBoard = (props) => {\n  const [currentPage, setCurrentPage] = useState(0);\n  const [totalElements, setTotalElements] = useState(0);\n  const [sharedBoards, setSharedBoards] = useState([]);\n  const [popularSharedBoards, setPopularSharedBoards] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get('/api/weekly-best', {\n        withCredentials: true,\n      })\n      .then((res) => {\n        // console.log(res);\n        setPopularSharedBoards(res.data.data);\n      })\n      .catch((err) => {\n        console.dir(err);\n      });\n\n    handlePageChange(currentPage);\n  }, []);\n\n  const handlePageChange = (page) => {\n    axios\n      .get('/api/sharings', {\n        withCredentials: true,\n        params: {\n          page: page - 1,\n        },\n      })\n      .then((res) => {\n        // console.log(res.data);\n        setSharedBoards(res.data.data);\n        // console.log(page);\n\n        const pagination = res.data.pagination;\n        const { total_pages, total_elements, current_page, current_elements } = pagination;\n        setTotalElements(total_elements);\n        setCurrentPage(current_page);\n        window.scrollTo(0, 0);\n      })\n      .catch((err) => {\n        console.dir(err);\n      });\n  };\n\n  const onClickEdit = useCallback(() => {\n    props.history.push('/shareboard/write');\n  }, []);\n\n  if (!sharedBoards.length || !popularSharedBoards.length) {\n    return <div>loading...</div>;\n  }\n\n  return (\n    <div style={{ height: '100%' }}>\n      <Container>\n        <Header />\n        <Title>공유 게시판</Title>\n        <Content>\n          <h4>인기 게시물</h4>\n          {/* 인기 게시물 grid */}\n          <PopularCards>\n            <Row gutter={[16, 32]}>\n              {popularSharedBoards &&\n                popularSharedBoards.map((board, index) => (\n                  <React.Fragment key={index}>\n                    <CardsPopular\n                      title={board.title}\n                      createdBoard={board.created_at}\n                      boardId={board.id}\n                      likeCnt={board.like_cnt}\n                      bookTitle={board.book_title}\n                      writerNickName={board.writer_info.nick_name}\n                      bookTag={board.tag_content}\n                    />\n                  </React.Fragment>\n                ))}\n            </Row>\n          </PopularCards>\n          <h4>공유된 게시물</h4>\n          <SharedCards>\n            <Row gutter={[16, 32]}>\n              {sharedBoards &&\n                sharedBoards.map((board, index) => (\n                  <React.Fragment key={index}>\n                    <Cards\n                      share\n                      title={board.title}\n                      createdBoard={board.created_at}\n                      boardId={board.id}\n                      likeCnt={board.like_cnt}\n                      bookTitle={board.book_title}\n                      writerNickName={board.writer_info.nick_name}\n                      bookTag={board.tag_content}\n                    />\n                  </React.Fragment>\n                ))}\n            </Row>\n          </SharedCards>\n        </Content>\n        <div style={{ marginBottom: '50px' }}>\n          <Button onClick={onClickEdit}>작성하기</Button>\n        </div>\n        <div style={{ marginLeft: '150px' }}>\n          <Paging\n            bookBoard={true}\n            totalElements={totalElements}\n            currentPage={currentPage}\n            handlePageChange={handlePageChange}\n          />\n        </div>\n      </Container>\n      <Footer />\n    </div>\n  );\n};\n\nexport default withRouter(ShareBoard);\n"],"sourceRoot":""}